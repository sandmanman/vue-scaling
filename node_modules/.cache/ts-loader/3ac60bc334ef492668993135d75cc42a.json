{"remainingRequest":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/babel-loader/lib/index.js!/Users/zhangyufan/em/testPro/vue-scale/node_modules/ts-loader/index.js??ref--14-2!/Users/zhangyufan/em/testPro/vue-scale/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/zhangyufan/em/testPro/vue-scale/src/views/code/table/loading.ts","dependencies":[{"path":"/Users/zhangyufan/em/testPro/vue-scale/src/views/code/table/loading.ts","mtime":1573474128000},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/cache-loader/dist/cjs.js","mtime":1573721989004},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/babel-loader/lib/index.js","mtime":1574242632071},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/ts-loader/index.js","mtime":1574332289889},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1574242646426}],"contextDependencies":[],"result":["import { loadingOptions } from '@/views/code/table/options/loading';\n/**\n * demo 的代码部分， WDemo 的下面部分\n * @param attr {String} 额外添加的属性，适用于 loading ， ghost ， disabled 等类型为 boolean 的属性。\n * @return {string}\n */\n\nexport var codeCommon = function codeCommon() {\n  return \"<w-button @click=\\\"btnFn\\\">{{loadingStatus ? '\\u52A0\\u8F7D\\u4E2D' : '\\u52A0\\u8F7D\\u6570\\u636E'}}</w-button>\\n<br />\\n<br />\\n<w-table\\n  :col=\\\"loadingCol\\\"\\n  :options=\\\"loadingOptions\\\"\\n  :loading=\\\"loadingStatus\\\"\\n></w-table>\";\n};\nvar loading = {\n  title: '远程加载数据',\n  desc: '这个例子通过简单的定时器模拟 ajax 读取方式，演示了如何从服务端读取并展现数据以及页面 loading 效果。',\n  code: codeCommon(),\n  js: \"{\\n  data() {\\n    return {\\n      loadingStatus: false,\\n      loadingCol: [{\\n        title: 'Name',\\n        dataIndex: 'name',\\n        key: 'name',\\n        width: '100px',\\n      }, {\\n        title: 'Age',\\n        dataIndex: 'age',\\n        key: 'age',\\n        width: '100px',\\n      }, {\\n        title: 'Address',\\n        dataIndex: 'address',\\n        key: 'address',\\n      }, {\\n        title: 'Tags',\\n        key: 'tags',\\n        dataIndex: 'tags',\\n        width: '180px',\\n        render(createElement, { text }) {\\n          return text.map((textName, textIdx) => createElement('w-tag', {\\n            props: {\\n              color: ['#eb2f96', '#f5222d', '#1996f9'][textIdx],\\n            },\\n          }, textName));\\n        },\\n      }, {\\n        title: 'Action',\\n        key: 'action',\\n        dataIndex: 'action',\\n        width: '30px',\\n      }],\\n      loadingOptions: \".concat(loadingOptions, \",\\n    };\\n  },\\n  methods: {\\n    btnFn() {\\n      this.loadingStatus = true;\\n\\n      setTimeout(() => {\\n        this.loadingStatus = false;\\n      }, 1000);\\n    },\\n  },\\n}\")\n};\nexport default loading;",{"version":3,"sources":["/Users/zhangyufan/em/testPro/vue-scale/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/zhangyufan/em/testPro/vue-scale/src/views/code/table/loading.ts"],"names":[],"mappings":"AACA,SAAS,cAAT,QAA+B,oCAA/B;AAEA;;;;;;AAKA,OAAO,IAAM,UAAU,GAAG,SAAb,UAAa;AAAA;AAAA,CAAnB;AASP,IAAM,OAAO,GAAc;AACzB,EAAA,KAAK,EAAE,QADkB;AAEzB,EAAA,IAAI,EAAE,2DAFmB;AAGzB,EAAA,IAAI,EAAE,UAAU,EAHS;AAIzB,EAAA,EAAE,k5BAoCoB,cApCpB;AAJuB,CAA3B;AAuDA,eAAe,OAAf","sourcesContent":["import { ApiEntity } from '@/views/entity/demoentity';\r\nimport { loadingOptions } from '@/views/code/table/options/loading';\r\n\r\n/**\r\n * demo 的代码部分， WDemo 的下面部分\r\n * @param attr {String} 额外添加的属性，适用于 loading ， ghost ， disabled 等类型为 boolean 的属性。\r\n * @return {string}\r\n */\r\nexport const codeCommon = (): string => `<w-button @click=\"btnFn\">{{loadingStatus ? '加载中' : '加载数据'}}</w-button>\r\n<br />\r\n<br />\r\n<w-table\r\n  :col=\"loadingCol\"\r\n  :options=\"loadingOptions\"\r\n  :loading=\"loadingStatus\"\r\n></w-table>`;\r\n\r\nconst loading: ApiEntity = {\r\n  title: '远程加载数据',\r\n  desc: '这个例子通过简单的定时器模拟 ajax 读取方式，演示了如何从服务端读取并展现数据以及页面 loading 效果。',\r\n  code: codeCommon(),\r\n  js: `{\r\n  data() {\r\n    return {\r\n      loadingStatus: false,\r\n      loadingCol: [{\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n        width: '100px',\r\n      }, {\r\n        title: 'Age',\r\n        dataIndex: 'age',\r\n        key: 'age',\r\n        width: '100px',\r\n      }, {\r\n        title: 'Address',\r\n        dataIndex: 'address',\r\n        key: 'address',\r\n      }, {\r\n        title: 'Tags',\r\n        key: 'tags',\r\n        dataIndex: 'tags',\r\n        width: '180px',\r\n        render(createElement, { text }) {\r\n          return text.map((textName, textIdx) => createElement('w-tag', {\r\n            props: {\r\n              color: ['#eb2f96', '#f5222d', '#1996f9'][textIdx],\r\n            },\r\n          }, textName));\r\n        },\r\n      }, {\r\n        title: 'Action',\r\n        key: 'action',\r\n        dataIndex: 'action',\r\n        width: '30px',\r\n      }],\r\n      loadingOptions: ${loadingOptions},\r\n    };\r\n  },\r\n  methods: {\r\n    btnFn() {\r\n      this.loadingStatus = true;\r\n\r\n      setTimeout(() => {\r\n        this.loadingStatus = false;\r\n      }, 1000);\r\n    },\r\n  },\r\n}`,\r\n};\r\n\r\nexport default loading;\r\n"],"sourceRoot":""}]}