{"remainingRequest":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/babel-loader/lib/index.js!/Users/zhangyufan/em/testPro/vue-scale/node_modules/ts-loader/index.js??ref--14-2!/Users/zhangyufan/em/testPro/vue-scale/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/zhangyufan/em/testPro/vue-scale/src/views/api/tag.ts","dependencies":[{"path":"/Users/zhangyufan/em/testPro/vue-scale/src/views/api/tag.ts","mtime":1573474128000},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/cache-loader/dist/cjs.js","mtime":1573721989004},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/babel-loader/lib/index.js","mtime":1574242632071},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/ts-loader/index.js","mtime":1574332289889},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1574242646426}],"contextDependencies":[],"result":["export var props = [{\n  param: 'disabled',\n  desc: '失效状态',\n  type: 'Boolean',\n  require: '否',\n  default: '无'\n}, {\n  param: 'loading',\n  desc: '加载模式',\n  type: 'Boolean',\n  require: '否',\n  default: '无'\n}, {\n  param: 'stop',\n  desc: '点击事件是否冒泡',\n  type: 'Boolean',\n  require: '否',\n  default: '无'\n}, {\n  param: 'inline',\n  desc: '是否有 <code>inline-block</code> ，属性排长一行',\n  type: 'Boolean',\n  require: '否',\n  default: 'true'\n}, {\n  param: 'closable',\n  desc: '标签是否可以关闭',\n  type: 'Boolean',\n  require: '否',\n  default: '无'\n}, {\n  param: 'size',\n  desc: '设置按钮大小，可选值为 <code>small</code> <code>large</code> 或者不设',\n  type: 'String',\n  require: '否',\n  default: '无'\n}, {\n  param: 'color',\n  desc: '标签色',\n  type: 'String',\n  require: '否',\n  default: '无'\n}, {\n  param: 'colorType',\n  desc: '标签颜色的渲染类型，可选值为 <code>all(全部)</code> <code>section(部分)</code>',\n  type: 'String',\n  require: '否',\n  default: '无'\n}, {\n  param: 'close',\n  desc: '关闭触发的方法，返回 {Event对象}({ev})',\n  type: 'Function',\n  require: '否',\n  default: '() => {}'\n}];\nexport var methods = [{\n  name: 'close',\n  desc: '关闭触发的方法',\n  return: '{Event对象}({ev})'\n}];\nexport var checkTagProps = [{\n  param: 'disabled',\n  desc: '失效状态',\n  type: 'Boolean',\n  require: '否',\n  default: '无'\n}, {\n  param: 'loading',\n  desc: '加载模式',\n  type: 'Boolean',\n  require: '否',\n  default: '无'\n}, {\n  param: 'inline',\n  desc: '是否有 <code>inline-block</code> ，属性排长一行',\n  type: 'Boolean',\n  require: '否',\n  default: 'true'\n}, {\n  param: 'size',\n  desc: '设置按钮大小，可选值为 <code>small</code> <code>large</code> 或者不设',\n  type: 'String',\n  require: '否',\n  default: '无'\n}];\nexport var checkTagMethods = [];\nexport var newTagProps = [{\n  param: 'disabled',\n  desc: '失效状态',\n  type: 'Boolean',\n  require: '否',\n  default: '无'\n}, {\n  param: 'loading',\n  desc: '加载模式',\n  type: 'Boolean',\n  require: '否',\n  default: '无'\n}, {\n  param: 'stop',\n  desc: '点击事件是否冒泡',\n  type: 'Boolean',\n  require: '否',\n  default: '无'\n}, {\n  param: 'size',\n  desc: '设置按钮大小，可选值为 <code>small</code> <code>large</code> 或者不设',\n  type: 'String',\n  require: '否',\n  default: '无'\n}, {\n  param: 'placeholder',\n  desc: '创建标签的默认提示文案',\n  type: 'String',\n  require: '否',\n  default: '无'\n}, {\n  param: 'error',\n  desc: '输入框报错的方法，当返回为 true 的时候，输入框为错误状态。',\n  type: 'Function',\n  require: '否',\n  default: '() => false'\n}, {\n  param: 'before',\n  desc: '改变之前触发，返回 Promise 对象',\n  type: 'Function',\n  require: '否',\n  default: 'function() {return new Promise((resolve, reject) => {resolve();});}'\n}, {\n  param: 'change',\n  desc: '改变触发，返回 {当前值}({ value })',\n  type: 'Function',\n  require: '否',\n  default: '() => {}'\n}];\nexport var newTagMethods = [{\n  name: 'change',\n  desc: '改变触发',\n  return: '{当前值}({ value })'\n}];",{"version":3,"sources":["/Users/zhangyufan/em/testPro/vue-scale/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/zhangyufan/em/testPro/vue-scale/src/views/api/tag.ts"],"names":[],"mappings":"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","sourcesContent":["export const props = [\r\n  {\r\n    param: 'disabled',\r\n    desc: '失效状态',\r\n    type: 'Boolean',\r\n    require: '否',\r\n    default: '无',\r\n  },\r\n  {\r\n    param: 'loading',\r\n    desc: '加载模式',\r\n    type: 'Boolean',\r\n    require: '否',\r\n    default: '无',\r\n  },\r\n  {\r\n    param: 'stop',\r\n    desc: '点击事件是否冒泡',\r\n    type: 'Boolean',\r\n    require: '否',\r\n    default: '无',\r\n  },\r\n  {\r\n    param: 'inline',\r\n    desc: '是否有 <code>inline-block</code> ，属性排长一行',\r\n    type: 'Boolean',\r\n    require: '否',\r\n    default: 'true',\r\n  },\r\n  {\r\n    param: 'closable',\r\n    desc: '标签是否可以关闭',\r\n    type: 'Boolean',\r\n    require: '否',\r\n    default: '无',\r\n  },\r\n  {\r\n    param: 'size',\r\n    desc: '设置按钮大小，可选值为 <code>small</code> <code>large</code> 或者不设',\r\n    type: 'String',\r\n    require: '否',\r\n    default: '无',\r\n  },\r\n  {\r\n    param: 'color',\r\n    desc: '标签色',\r\n    type: 'String',\r\n    require: '否',\r\n    default: '无',\r\n  },\r\n  {\r\n    param: 'colorType',\r\n    desc: '标签颜色的渲染类型，可选值为 <code>all(全部)</code> <code>section(部分)</code>',\r\n    type: 'String',\r\n    require: '否',\r\n    default: '无',\r\n  },\r\n  {\r\n    param: 'close',\r\n    desc: '关闭触发的方法，返回 {Event对象}({ev})',\r\n    type: 'Function',\r\n    require: '否',\r\n    default: '() => {}',\r\n  },\r\n];\r\n\r\nexport const methods = [\r\n  {\r\n    name: 'close',\r\n    desc: '关闭触发的方法',\r\n    return: '{Event对象}({ev})',\r\n  },\r\n];\r\n\r\nexport const checkTagProps = [\r\n  {\r\n    param: 'disabled',\r\n    desc: '失效状态',\r\n    type: 'Boolean',\r\n    require: '否',\r\n    default: '无',\r\n  },\r\n  {\r\n    param: 'loading',\r\n    desc: '加载模式',\r\n    type: 'Boolean',\r\n    require: '否',\r\n    default: '无',\r\n  },\r\n  {\r\n    param: 'inline',\r\n    desc: '是否有 <code>inline-block</code> ，属性排长一行',\r\n    type: 'Boolean',\r\n    require: '否',\r\n    default: 'true',\r\n  },\r\n  {\r\n    param: 'size',\r\n    desc: '设置按钮大小，可选值为 <code>small</code> <code>large</code> 或者不设',\r\n    type: 'String',\r\n    require: '否',\r\n    default: '无',\r\n  },\r\n];\r\n\r\nexport const checkTagMethods = [];\r\n\r\nexport const newTagProps = [\r\n  {\r\n    param: 'disabled',\r\n    desc: '失效状态',\r\n    type: 'Boolean',\r\n    require: '否',\r\n    default: '无',\r\n  },\r\n  {\r\n    param: 'loading',\r\n    desc: '加载模式',\r\n    type: 'Boolean',\r\n    require: '否',\r\n    default: '无',\r\n  },\r\n  {\r\n    param: 'stop',\r\n    desc: '点击事件是否冒泡',\r\n    type: 'Boolean',\r\n    require: '否',\r\n    default: '无',\r\n  },\r\n  {\r\n    param: 'size',\r\n    desc: '设置按钮大小，可选值为 <code>small</code> <code>large</code> 或者不设',\r\n    type: 'String',\r\n    require: '否',\r\n    default: '无',\r\n  },\r\n  {\r\n    param: 'placeholder',\r\n    desc: '创建标签的默认提示文案',\r\n    type: 'String',\r\n    require: '否',\r\n    default: '无',\r\n  },\r\n  {\r\n    param: 'error',\r\n    desc: '输入框报错的方法，当返回为 true 的时候，输入框为错误状态。',\r\n    type: 'Function',\r\n    require: '否',\r\n    default: '() => false',\r\n  },\r\n  {\r\n    param: 'before',\r\n    desc: '改变之前触发，返回 Promise 对象',\r\n    type: 'Function',\r\n    require: '否',\r\n    default: 'function() {return new Promise((resolve, reject) => {resolve();});}',\r\n  },\r\n  {\r\n    param: 'change',\r\n    desc: '改变触发，返回 {当前值}({ value })',\r\n    type: 'Function',\r\n    require: '否',\r\n    default: '() => {}',\r\n  },\r\n];\r\n\r\nexport const newTagMethods = [\r\n  {\r\n    name: 'change',\r\n    desc: '改变触发',\r\n    return: '{当前值}({ value })',\r\n  },\r\n];\r\n"],"sourceRoot":""}]}