{"remainingRequest":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/babel-loader/lib/index.js!/Users/zhangyufan/em/testPro/vue-scale/node_modules/ts-loader/index.js??ref--14-2!/Users/zhangyufan/em/testPro/vue-scale/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/zhangyufan/em/testPro/vue-scale/src/views/code/inputnumber/formatter.ts","dependencies":[{"path":"/Users/zhangyufan/em/testPro/vue-scale/src/views/code/inputnumber/formatter.ts","mtime":1573474128000},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/cache-loader/dist/cjs.js","mtime":1573721989004},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/babel-loader/lib/index.js","mtime":1574242632071},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/ts-loader/index.js","mtime":1574332289889},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1574242646426}],"contextDependencies":[],"result":["var base = {\n  title: '格式化处理',\n  desc: '通过 <code>formatter</code> 格式化数字，以展示具有具体含义的数据，往往需要配合 <code>parser</code> 一起使用。',\n  code: \"<w-input-number :value=\\\"formatterValue\\\" :formatter=\\\"val => '$'+ val\\\" :parser=\\\"val=> String(val).replace(/$s?/g, '')\\\" style=\\\"display: block; width: 100%;\\\" />\",\n  js: \"{\\n  data() {\\n    return {\\n      formatterValue: 12345678,\\n    };\\n  },\\n}\"\n};\nexport default base;",{"version":3,"sources":["/Users/zhangyufan/em/testPro/vue-scale/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/zhangyufan/em/testPro/vue-scale/src/views/code/inputnumber/formatter.ts"],"names":[],"mappings":"AAGA,IAAM,IAAI,GAAc;AACtB,EAAA,KAAK,EAAE,OADe;AAEtB,EAAA,IAAI,EAAE,+EAFgB;AAGtB,EAAA,IAAI,wKAHkB;AAItB,EAAA,EAAE;AAJoB,CAAxB;AAaA,eAAe,IAAf","sourcesContent":["/* eslint-disable */\r\nimport { ApiEntity } from '@/views/entity/demoentity';\r\n\r\nconst base: ApiEntity = {\r\n  title: '格式化处理',\r\n  desc: '通过 <code>formatter</code> 格式化数字，以展示具有具体含义的数据，往往需要配合 <code>parser</code> 一起使用。',\r\n  code: `<w-input-number :value=\"formatterValue\" :formatter=\"val => '$'+ val\" :parser=\"val=> String(val).replace(/\\$\\s?/g, '')\" style=\"display: block; width: 100%;\" />`,\r\n  js: `{\r\n  data() {\r\n    return {\r\n      formatterValue: 12345678,\r\n    };\r\n  },\r\n}`,\r\n};\r\n\r\nexport default base;\r\n"],"sourceRoot":""}]}