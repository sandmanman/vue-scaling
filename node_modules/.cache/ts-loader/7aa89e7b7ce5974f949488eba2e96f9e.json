{"remainingRequest":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/babel-loader/lib/index.js!/Users/zhangyufan/em/testPro/vue-scale/node_modules/ts-loader/index.js??ref--14-2!/Users/zhangyufan/em/testPro/vue-scale/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/zhangyufan/em/testPro/vue-scale/src/views/api/button.ts","dependencies":[{"path":"/Users/zhangyufan/em/testPro/vue-scale/src/views/api/button.ts","mtime":1573474128000},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/cache-loader/dist/cjs.js","mtime":1573721989004},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/babel-loader/lib/index.js","mtime":1574242632071},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/ts-loader/index.js","mtime":1574332289889},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1574242646426}],"contextDependencies":[],"result":["var url = 'https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#attr-type';\nexport var props = [{\n  param: 'type',\n  desc: '设置按钮类型，可选值为 <code>info</code> <code>border</code> <code>dashed</code> <code>danger</code> 或者不设',\n  type: 'String',\n  require: '否',\n  default: '无'\n}, {\n  param: 'size',\n  desc: '设置按钮大小，可选值为 <code>small</code> <code>large</code> 或者不设',\n  type: 'String',\n  require: '否',\n  default: '无'\n}, {\n  param: 'htmlType',\n  desc: \"\\u8BBE\\u7F6E <code>button</code> \\u539F\\u751F\\u7684 <code>type</code> \\u503C\\uFF0C\\u53EF\\u9009\\u503C\\u8BF7\\u53C2\\u8003 <a class=\\\"link\\\" target=\\\"_blank\\\" href=\\\"\".concat(url, \"\\\">HTML \\u6807\\u51C6</a>\"),\n  type: 'String',\n  require: '否',\n  default: 'button'\n}, {\n  param: 'stop',\n  desc: '按钮点击是否冒泡。 <code>0.9.0</code> 新增。',\n  type: 'Boolean',\n  require: '否',\n  default: '无'\n}, {\n  param: 'loading',\n  desc: '设置按钮载入状态',\n  type: 'Boolean',\n  require: '否',\n  default: '无'\n}, {\n  param: 'disabled',\n  desc: '按钮失效状态',\n  type: 'Boolean',\n  require: '否',\n  default: '无'\n}, {\n  param: 'ghost',\n  desc: '幽灵属性，使按钮背景透明',\n  type: 'Boolean',\n  require: '否',\n  default: '无'\n}, {\n  param: 'className',\n  desc: '自定义按钮最外层的 class',\n  type: 'String | Object | Array',\n  require: '否',\n  default: '无'\n}, {\n  param: 'click',\n  desc: '点击动效之后触发的点击事件，返回 {event, key}',\n  type: 'Function',\n  require: '否',\n  default: '() => {}'\n}];\nexport var methods = [{\n  name: 'click',\n  desc: '点击动效之后触发',\n  return: '{event, key}'\n}];\nexport var clickProps = [{\n  desc: 'Event对象',\n  type: 'Event',\n  key: 'ev'\n}, {\n  desc: '组件传入的 key 属性',\n  type: 'String',\n  key: 'key'\n}, {\n  desc: '动画的Event对象',\n  type: 'String',\n  key: 'animEvent'\n}];",{"version":3,"sources":["/Users/zhangyufan/em/testPro/vue-scale/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/zhangyufan/em/testPro/vue-scale/src/views/api/button.ts"],"names":[],"mappings":"AAAA,IAAM,GAAG,GAAG,4EAAZ;AAEA,OAAO,IAAM,KAAK,GAAG,CACnB;AACE,EAAA,KAAK,EAAE,MADT;AAEE,EAAA,IAAI,EAAE,gGAFR;AAGE,EAAA,IAAI,EAAE,QAHR;AAIE,EAAA,OAAO,EAAE,GAJX;AAKE,EAAA,OAAO,EAAE;AALX,CADmB,EAQnB;AACE,EAAA,KAAK,EAAE,MADT;AAEE,EAAA,IAAI,EAAE,wDAFR;AAGE,EAAA,IAAI,EAAE,QAHR;AAIE,EAAA,OAAO,EAAE,GAJX;AAKE,EAAA,OAAO,EAAE;AALX,CARmB,EAenB;AACE,EAAA,KAAK,EAAE,UADT;AAEE,EAAA,IAAI,8KAAiG,GAAjG,6BAFN;AAGE,EAAA,IAAI,EAAE,QAHR;AAIE,EAAA,OAAO,EAAE,GAJX;AAKE,EAAA,OAAO,EAAE;AALX,CAfmB,EAsBnB;AACE,EAAA,KAAK,EAAE,MADT;AAEE,EAAA,IAAI,EAAE,kCAFR;AAGE,EAAA,IAAI,EAAE,SAHR;AAIE,EAAA,OAAO,EAAE,GAJX;AAKE,EAAA,OAAO,EAAE;AALX,CAtBmB,EA6BnB;AACE,EAAA,KAAK,EAAE,SADT;AAEE,EAAA,IAAI,EAAE,UAFR;AAGE,EAAA,IAAI,EAAE,SAHR;AAIE,EAAA,OAAO,EAAE,GAJX;AAKE,EAAA,OAAO,EAAE;AALX,CA7BmB,EAoCnB;AACE,EAAA,KAAK,EAAE,UADT;AAEE,EAAA,IAAI,EAAE,QAFR;AAGE,EAAA,IAAI,EAAE,SAHR;AAIE,EAAA,OAAO,EAAE,GAJX;AAKE,EAAA,OAAO,EAAE;AALX,CApCmB,EA2CnB;AACE,EAAA,KAAK,EAAE,OADT;AAEE,EAAA,IAAI,EAAE,cAFR;AAGE,EAAA,IAAI,EAAE,SAHR;AAIE,EAAA,OAAO,EAAE,GAJX;AAKE,EAAA,OAAO,EAAE;AALX,CA3CmB,EAkDnB;AACE,EAAA,KAAK,EAAE,WADT;AAEE,EAAA,IAAI,EAAE,iBAFR;AAGE,EAAA,IAAI,EAAE,yBAHR;AAIE,EAAA,OAAO,EAAE,GAJX;AAKE,EAAA,OAAO,EAAE;AALX,CAlDmB,EAyDnB;AACE,EAAA,KAAK,EAAE,OADT;AAEE,EAAA,IAAI,EAAE,+BAFR;AAGE,EAAA,IAAI,EAAE,UAHR;AAIE,EAAA,OAAO,EAAE,GAJX;AAKE,EAAA,OAAO,EAAE;AALX,CAzDmB,CAAd;AAkEP,OAAO,IAAM,OAAO,GAAG,CACrB;AACE,EAAA,IAAI,EAAE,OADR;AAEE,EAAA,IAAI,EAAE,UAFR;AAGE,EAAA,MAAM,EAAE;AAHV,CADqB,CAAhB;AAQP,OAAO,IAAM,UAAU,GAAG,CACxB;AACE,EAAA,IAAI,EAAE,SADR;AAEE,EAAA,IAAI,EAAE,OAFR;AAGE,EAAA,GAAG,EAAE;AAHP,CADwB,EAMxB;AACE,EAAA,IAAI,EAAE,cADR;AAEE,EAAA,IAAI,EAAE,QAFR;AAGE,EAAA,GAAG,EAAE;AAHP,CANwB,EAWxB;AACE,EAAA,IAAI,EAAE,YADR;AAEE,EAAA,IAAI,EAAE,QAFR;AAGE,EAAA,GAAG,EAAE;AAHP,CAXwB,CAAnB","sourcesContent":["const url = 'https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#attr-type';\r\n\r\nexport const props = [\r\n  {\r\n    param: 'type',\r\n    desc: '设置按钮类型，可选值为 <code>info</code> <code>border</code> <code>dashed</code> <code>danger</code> 或者不设',\r\n    type: 'String',\r\n    require: '否',\r\n    default: '无',\r\n  },\r\n  {\r\n    param: 'size',\r\n    desc: '设置按钮大小，可选值为 <code>small</code> <code>large</code> 或者不设',\r\n    type: 'String',\r\n    require: '否',\r\n    default: '无',\r\n  },\r\n  {\r\n    param: 'htmlType',\r\n    desc: `设置 <code>button</code> 原生的 <code>type</code> 值，可选值请参考 <a class=\"link\" target=\"_blank\" href=\"${url}\">HTML 标准</a>`,\r\n    type: 'String',\r\n    require: '否',\r\n    default: 'button',\r\n  },\r\n  {\r\n    param: 'stop',\r\n    desc: '按钮点击是否冒泡。 <code>0.9.0</code> 新增。',\r\n    type: 'Boolean',\r\n    require: '否',\r\n    default: '无',\r\n  },\r\n  {\r\n    param: 'loading',\r\n    desc: '设置按钮载入状态',\r\n    type: 'Boolean',\r\n    require: '否',\r\n    default: '无',\r\n  },\r\n  {\r\n    param: 'disabled',\r\n    desc: '按钮失效状态',\r\n    type: 'Boolean',\r\n    require: '否',\r\n    default: '无',\r\n  },\r\n  {\r\n    param: 'ghost',\r\n    desc: '幽灵属性，使按钮背景透明',\r\n    type: 'Boolean',\r\n    require: '否',\r\n    default: '无',\r\n  },\r\n  {\r\n    param: 'className',\r\n    desc: '自定义按钮最外层的 class',\r\n    type: 'String | Object | Array',\r\n    require: '否',\r\n    default: '无',\r\n  },\r\n  {\r\n    param: 'click',\r\n    desc: '点击动效之后触发的点击事件，返回 {event, key}',\r\n    type: 'Function',\r\n    require: '否',\r\n    default: '() => {}',\r\n  },\r\n];\r\n\r\nexport const methods = [\r\n  {\r\n    name: 'click',\r\n    desc: '点击动效之后触发',\r\n    return: '{event, key}',\r\n  },\r\n];\r\n\r\nexport const clickProps = [\r\n  {\r\n    desc: 'Event对象',\r\n    type: 'Event',\r\n    key: 'ev',\r\n  },\r\n  {\r\n    desc: '组件传入的 key 属性',\r\n    type: 'String',\r\n    key: 'key',\r\n  },\r\n  {\r\n    desc: '动画的Event对象',\r\n    type: 'String',\r\n    key: 'animEvent',\r\n  },\r\n];\r\n"],"sourceRoot":""}]}