{"remainingRequest":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/babel-loader/lib/index.js!/Users/zhangyufan/em/testPro/vue-scale/node_modules/ts-loader/index.js??ref--14-2!/Users/zhangyufan/em/testPro/vue-scale/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/zhangyufan/em/testPro/vue-scale/src/directives/transfer-dom.ts","dependencies":[{"path":"/Users/zhangyufan/em/testPro/vue-scale/src/directives/transfer-dom.ts","mtime":1573474128000},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/cache-loader/dist/cjs.js","mtime":1573721989004},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/babel-loader/lib/index.js","mtime":1574242632071},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/ts-loader/index.js","mtime":1574332289889},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1574242646426}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport _Object$assign from \"/Users/zhangyufan/em/testPro/vue-scale/node_modules/@babel/runtime-corejs2/core-js/object/assign\";\n// Thanks to: https://github.com/iview/iview/blob/2.0/src/directives/transfer-dom.js\n// Thanks to: https://github.com/airyland/vux/blob/v2/src/directives/transfer-dom/index.js\n// Thanks to: https://github.com/calebroseland/vue-dom-portal\nimport { isPromise } from '@/helper/type';\n/**\n * Get target DOM Node\n * @param {(Node|string|Boolean)} [node=document.body] DOM Node, CSS selector, or Boolean\n * @return {Node} The target that the el will be appended to\n */\n\nfunction getTarget() {\n  var node = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document.body;\n\n  if (node === true) {\n    return document.body;\n  }\n\n  return node instanceof window.Node ? node : document.querySelector(node);\n}\n\nfunction transferInsert(parentNode, home, value, el, hasMovedOut, callBack) {\n  if (value !== false) {\n    parentNode.replaceChild(home, el); // moving out, el is no longer in the document\n\n    getTarget(value).appendChild(el); // moving into new place\n\n    callBack();\n  }\n\n  if (!el.wTransferDomData) {\n    el.wTransferDomData = {\n      parentNode: parentNode,\n      home: home,\n      target: getTarget(value),\n      hasMovedOut: hasMovedOut\n    };\n  }\n}\n\nfunction transferUpdate(parentNode, home, value, el, hasMovedOut) {\n  if (home.nodeType === 1) {\n    if (!hasMovedOut && value) {\n      // remove from document and leave placeholder\n      parentNode.replaceChild(home, el); // append to target\n\n      getTarget(value).appendChild(el);\n      el.wTransferDomData = _Object$assign({}, el.wTransferDomData, {\n        hasMovedOut: true,\n        target: getTarget(value)\n      });\n    } else if (hasMovedOut && value === false) {\n      // previously moved, coming back home\n      parentNode.replaceChild(el, home);\n      el.wTransferDomData = _Object$assign({}, el.wTransferDomData, {\n        hasMovedOut: false,\n        target: getTarget(value)\n      });\n    } else if (value && value.nodeName !== 'BODY') {\n      // already moved, going somewhere else\n      // 并且 不是 body 元素，就继续添加，修复 w-modal 中有 w-input 的时候输入内容会自定失去焦点\n      getTarget(value).appendChild(el);\n    }\n  }\n}\n\nvar directive = {\n  inserted: function inserted(el, _ref) {\n    var value = _ref.value;\n    if (el.dataset && el.dataset.transfer !== 'true') return false;\n    el.className = el.className ? \"\".concat(el.className, \" v-transfer-dom\") : 'v-transfer-dom';\n    var parentNode = el.parentNode;\n\n    if (!parentNode) {\n      return false;\n    }\n\n    var home = document.createComment('');\n    var hasMovedOut = false;\n\n    if (isPromise(value)) {\n      value.then(function (targetEl) {\n        transferInsert(parentNode, home, targetEl, el, hasMovedOut, function () {\n          hasMovedOut = true;\n        });\n      });\n    } else {\n      transferInsert(parentNode, home, value, el, hasMovedOut, function () {\n        hasMovedOut = true;\n      });\n    }\n\n    return false;\n  },\n  componentUpdated: function componentUpdated(el, _ref2) {\n    var value = _ref2.value;\n    if (el.dataset && el.dataset.transfer !== 'true') return false; // need to make sure children are done updating (vs. `update`)\n\n    var ref$1 = el.wTransferDomData;\n\n    if (!ref$1) {\n      return false;\n    } // homes.get(el)\n\n\n    var home = ref$1.home,\n        parentNode = ref$1.parentNode,\n        hasMovedOut = ref$1.hasMovedOut; // recall where home is\n\n    if (isPromise(value)) {\n      value.then(function (targetEl) {\n        transferUpdate(parentNode, home, targetEl, el, hasMovedOut);\n      });\n    } else {\n      transferUpdate(parentNode, home, value, el, hasMovedOut);\n    }\n\n    return false;\n  },\n  unbind: function unbind(el) {\n    if (el.dataset && el.dataset.transfer !== 'true') return false;\n    el.className = el.className.replace('v-transfer-dom', '');\n    var ref$1 = el.wTransferDomData;\n\n    if (!ref$1) {\n      return false;\n    }\n\n    if (el.wTransferDomData.hasMovedOut === true && el.wTransferDomData.parentNode) {\n      el.wTransferDomData.parentNode.appendChild(el);\n    }\n\n    el.wTransferDomData = null;\n    return false;\n  }\n};\nexport default directive;",{"version":3,"sources":["/Users/zhangyufan/em/testPro/vue-scale/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/zhangyufan/em/testPro/vue-scale/src/directives/transfer-dom.ts"],"names":[],"mappings":"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","sourcesContent":["// Thanks to: https://github.com/iview/iview/blob/2.0/src/directives/transfer-dom.js\r\n// Thanks to: https://github.com/airyland/vux/blob/v2/src/directives/transfer-dom/index.js\r\n// Thanks to: https://github.com/calebroseland/vue-dom-portal\r\n\r\nimport { isPromise } from '@/helper/type';\r\n\r\n/**\r\n * Get target DOM Node\r\n * @param {(Node|string|Boolean)} [node=document.body] DOM Node, CSS selector, or Boolean\r\n * @return {Node} The target that the el will be appended to\r\n */\r\nfunction getTarget(node: any = document.body) {\r\n  if (node === true) { return document.body; }\r\n  return node instanceof (window as any).Node ? node : document.querySelector(node);\r\n}\r\n\r\nfunction transferInsert(\r\n  parentNode: any,\r\n  home: any,\r\n  value: any,\r\n  el: any,\r\n  hasMovedOut: any,\r\n  callBack: Function,\r\n) {\r\n  if (value !== false) {\r\n    parentNode.replaceChild(home, el); // moving out, el is no longer in the document\r\n    getTarget(value).appendChild(el); // moving into new place\r\n\r\n    callBack();\r\n  }\r\n  if (!el.wTransferDomData) {\r\n    el.wTransferDomData = {\r\n      parentNode,\r\n      home,\r\n      target: getTarget(value),\r\n      hasMovedOut,\r\n    };\r\n  }\r\n}\r\n\r\nfunction transferUpdate(\r\n  parentNode: any,\r\n  home: any,\r\n  value: any,\r\n  el: any,\r\n  hasMovedOut: any,\r\n) {\r\n  if (home.nodeType === 1) {\r\n    if (!hasMovedOut && value) {\r\n      // remove from document and leave placeholder\r\n      parentNode.replaceChild(home, el);\r\n      // append to target\r\n      getTarget(value).appendChild(el);\r\n      el.wTransferDomData = Object.assign({}, el.wTransferDomData, {\r\n        hasMovedOut: true,\r\n        target: getTarget(value),\r\n      });\r\n    } else if (hasMovedOut && value === false) {\r\n      // previously moved, coming back home\r\n      parentNode.replaceChild(el, home);\r\n      el.wTransferDomData = Object.assign(\r\n        {},\r\n        el.wTransferDomData,\r\n        {\r\n          hasMovedOut: false,\r\n          target: getTarget(value),\r\n        },\r\n      );\r\n    } else if (value && value.nodeName !== 'BODY') {\r\n      // already moved, going somewhere else\r\n      // 并且 不是 body 元素，就继续添加，修复 w-modal 中有 w-input 的时候输入内容会自定失去焦点\r\n      getTarget(value).appendChild(el);\r\n    }\r\n  }\r\n}\r\n\r\nconst directive = {\r\n  inserted(el: any, { value }: any) {\r\n    if (el.dataset && el.dataset.transfer !== 'true') return false;\r\n    el.className = el.className ? `${el.className} v-transfer-dom` : 'v-transfer-dom';\r\n    const { parentNode } = el;\r\n    if (!parentNode) {\r\n      return false;\r\n    }\r\n    const home = document.createComment('');\r\n    let hasMovedOut = false;\r\n\r\n    if (isPromise(value)) {\r\n      value.then((targetEl: any) => {\r\n        transferInsert(\r\n          parentNode,\r\n          home,\r\n          targetEl,\r\n          el,\r\n          hasMovedOut,\r\n          () => {\r\n            hasMovedOut = true;\r\n          },\r\n        );\r\n      });\r\n    } else {\r\n      transferInsert(\r\n        parentNode,\r\n        home,\r\n        value,\r\n        el,\r\n        hasMovedOut,\r\n        () => {\r\n          hasMovedOut = true;\r\n        },\r\n      );\r\n    }\r\n\r\n    return false;\r\n  },\r\n  componentUpdated(el: any, { value }: any) {\r\n    if (el.dataset && el.dataset.transfer !== 'true') return false;\r\n    // need to make sure children are done updating (vs. `update`)\r\n    const ref$1 = el.wTransferDomData;\r\n    if (!ref$1) {\r\n      return false;\r\n    }\r\n    // homes.get(el)\r\n    const { home, parentNode, hasMovedOut } = ref$1; // recall where home is\r\n\r\n    if (isPromise(value)) {\r\n      value.then((targetEl: any) => {\r\n        transferUpdate(\r\n          parentNode,\r\n          home,\r\n          targetEl,\r\n          el,\r\n          hasMovedOut,\r\n        );\r\n      });\r\n    } else {\r\n      transferUpdate(\r\n        parentNode,\r\n        home,\r\n        value,\r\n        el,\r\n        hasMovedOut,\r\n      );\r\n    }\r\n    return false;\r\n  },\r\n  unbind(el: any) {\r\n    if (el.dataset && el.dataset.transfer !== 'true') return false;\r\n    el.className = el.className.replace('v-transfer-dom', '');\r\n    const ref$1 = el.wTransferDomData;\r\n    if (!ref$1) {\r\n      return false;\r\n    }\r\n    if (el.wTransferDomData.hasMovedOut === true && el.wTransferDomData.parentNode) {\r\n      el.wTransferDomData.parentNode.appendChild(el);\r\n    }\r\n    el.wTransferDomData = null;\r\n    return false;\r\n  },\r\n};\r\n\r\nexport default directive;\r\n"],"sourceRoot":""}]}