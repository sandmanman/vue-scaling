{"remainingRequest":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/babel-loader/lib/index.js!/Users/zhangyufan/em/testPro/vue-scale/node_modules/ts-loader/index.js??ref--14-2!/Users/zhangyufan/em/testPro/vue-scale/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/zhangyufan/em/testPro/vue-scale/src/helper/node.ts","dependencies":[{"path":"/Users/zhangyufan/em/testPro/vue-scale/src/helper/node.ts","mtime":1573474128000},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/cache-loader/dist/cjs.js","mtime":1573721989004},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/babel-loader/lib/index.js","mtime":1574242632071},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/ts-loader/index.js","mtime":1574332289889},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1574242646426}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nexport var test = 1;\nexport var findUpNode = function findUpNode(content, name) {\n  var parent = content.$parent;\n  var tag = parent.name;\n\n  while (parent && tag !== name) {\n    parent = parent.$parent;\n\n    if (parent) {\n      tag = parent.name;\n    }\n  }\n\n  return parent;\n};",{"version":3,"sources":["/Users/zhangyufan/em/testPro/vue-scale/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/zhangyufan/em/testPro/vue-scale/src/helper/node.ts"],"names":[],"mappings":";AAAA,OAAO,IAAM,IAAI,GAAW,CAArB;AAEP,OAAO,IAAM,UAAU,GAAG,SAAb,UAAa,CAAC,OAAD,EAAe,IAAf,EAA+B;AACvD,MAAI,MAAM,GAAQ,OAAO,CAAC,OAA1B;AACA,MAAI,GAAG,GAAW,MAAM,CAAC,IAAzB;;AAEA,SAAO,MAAM,IAAI,GAAG,KAAK,IAAzB,EAA+B;AAC7B,IAAA,MAAM,GAAG,MAAM,CAAC,OAAhB;;AACA,QAAI,MAAJ,EAAY;AACV,MAAA,GAAG,GAAG,MAAM,CAAC,IAAb;AACD;AACF;;AAED,SAAO,MAAP;AACD,CAZM","sourcesContent":["export const test: number = 1;\r\n\r\nexport const findUpNode = (content: any, name: string) => {\r\n  let parent: any = content.$parent;\r\n  let tag: string = parent.name;\r\n\r\n  while (parent && tag !== name) {\r\n    parent = parent.$parent;\r\n    if (parent) {\r\n      tag = parent.name;\r\n    }\r\n  }\r\n\r\n  return parent;\r\n};\r\n"],"sourceRoot":""}]}