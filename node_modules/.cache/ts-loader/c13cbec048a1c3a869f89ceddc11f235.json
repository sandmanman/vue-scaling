{"remainingRequest":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/babel-loader/lib/index.js!/Users/zhangyufan/em/testPro/vue-scale/node_modules/ts-loader/index.js??ref--14-2!/Users/zhangyufan/em/testPro/vue-scale/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/zhangyufan/em/testPro/vue-scale/src/components/table/helper.ts","dependencies":[{"path":"/Users/zhangyufan/em/testPro/vue-scale/src/components/table/helper.ts","mtime":1573474128000},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/cache-loader/dist/cjs.js","mtime":1573721989004},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/babel-loader/lib/index.js","mtime":1574242632071},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/ts-loader/index.js","mtime":1574332289889},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1574242646426}],"contextDependencies":[],"result":["import _objectWithoutProperties from \"/Users/zhangyufan/em/testPro/vue-scale/node_modules/@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _Object$assign from \"/Users/zhangyufan/em/testPro/vue-scale/node_modules/@babel/runtime-corejs2/core-js/object/assign\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _toConsumableArray from \"/Users/zhangyufan/em/testPro/vue-scale/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport { hasOwn } from '@/helper/o';\nexport var getMaxLevel = function getMaxLevel(params) {\n  var attr = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'children';\n  var number = params.map(function () {\n    return 1;\n  });\n\n  var loopLevet = function loopLevet(obj, idx) {\n    obj.reduce(function (acc, item) {\n      if (hasOwn(item, attr)) {\n        loopLevet(item[attr], idx);\n        number[idx] += 1;\n      }\n\n      return number;\n    }, number);\n  };\n\n  params.forEach(function (paramItem, paramIndex) {\n    if (hasOwn(paramItem, attr)) {\n      loopLevet(paramItem[attr], paramIndex);\n      number[paramIndex] += 1;\n    }\n  });\n  return Math.max.apply(Math, _toConsumableArray(number));\n};\nexport var getAllChildrenLength = function getAllChildrenLength(params) {\n  var attr = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'children';\n  var childs = {};\n\n  var loopPushChild = function loopPushChild(obj, objIndex) {\n    obj.forEach(function (objItem, objItemIndex) {\n      var level = objIndex || String(objItemIndex);\n\n      if (hasOwn(objItem, attr)) {\n        if (!hasOwn(childs, String(objIndex))) {\n          childs[level] = 0;\n        }\n\n        var childItems = objItem[attr].filter(function (objItemChild) {\n          return !hasOwn(objItemChild, attr);\n        }); // 更新路径中的数据\n\n        var levelSplit = level.split('-');\n\n        if (levelSplit.length > 1) {\n          levelSplit.reduce(function (acc, levelItem) {\n            childs[acc] += childItems.length;\n            return \"\".concat(acc, \"-\").concat(levelItem);\n          }, levelSplit[0]);\n        } else {\n          childs[level] += childItems.length;\n        }\n\n        loopPushChild(objItem[attr], \"\".concat(level, \"-\").concat(String(objItemIndex)));\n      }\n    });\n  };\n\n  loopPushChild(params);\n  return childs;\n};\nexport var getCol = function getCol(item, itemIndex, maxLevel, childLength) {\n  var levels = itemIndex.split('-').length;\n  var rowSpan = maxLevel - levels + 1;\n\n  if (hasOwn(item, 'children')) {\n    item.children.forEach(function (childItem, childIndex) {\n      getCol(childItem, \"\".concat(itemIndex, \"-\").concat(String(childIndex)), maxLevel, childLength);\n    }); // 追加 rowSpan\n\n    _Object$assign(item, {\n      colSpan: childLength[itemIndex]\n    });\n  } else {\n    // 追加 rowSpan\n    _Object$assign(item, {\n      rowSpan: rowSpan\n    });\n  }\n};\nexport var handleCol = function handleCol(colDatas, newCol) {\n  var level = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var colLine = newCol[level] || [];\n  var nextLevel = level + 1; // 有层级\n\n  if (newCol[level]) {\n    newCol.splice(level, 1, colLine);\n  } else {\n    newCol.push(colLine);\n  }\n\n  colDatas.forEach(function (newColItem) {\n    var children = newColItem.children,\n        item = _objectWithoutProperties(newColItem, [\"children\"]);\n\n    if (children) {\n      handleCol(children, newCol, nextLevel);\n    }\n\n    colLine.push(item);\n  });\n};",{"version":3,"sources":["/Users/zhangyufan/em/testPro/vue-scale/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/zhangyufan/em/testPro/vue-scale/src/components/table/helper.ts"],"names":[],"mappings":"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","sourcesContent":["import { hasOwn } from '@/helper/o';\r\n\r\nexport const getMaxLevel = (params: any[], attr: string = 'children'): number => {\r\n  const number: number[] = params.map(() => 1);\r\n  const loopLevet = (obj: any, idx: number) => {\r\n    obj.reduce((acc: number, item: any) => {\r\n      if (hasOwn(item, attr)) {\r\n        loopLevet(item[attr], idx);\r\n        number[idx] += 1;\r\n      }\r\n      return number;\r\n    }, number);\r\n  };\r\n\r\n  params.forEach((paramItem: any, paramIndex: number) => {\r\n    if (hasOwn(paramItem, attr)) {\r\n      loopLevet(paramItem[attr], paramIndex);\r\n      number[paramIndex] += 1;\r\n    }\r\n  });\r\n\r\n  return Math.max(...number);\r\n};\r\n\r\nexport interface ChildEntity {\r\n  [levelPath: string]: number;\r\n}\r\n\r\nexport const getAllChildrenLength = (params: any[], attr: string = 'children'): ChildEntity => {\r\n  const childs: any = {};\r\n\r\n  const loopPushChild = (obj: any, objIndex?: string) => {\r\n    obj.forEach((objItem: any, objItemIndex: number) => {\r\n      const level = objIndex || String(objItemIndex);\r\n      if (hasOwn(objItem, attr)) {\r\n        if (!hasOwn(childs, String(objIndex))) {\r\n          childs[level] = 0;\r\n        }\r\n\r\n        const childItems = objItem[attr].filter(\r\n          (objItemChild: any) => !hasOwn(objItemChild, attr),\r\n        );\r\n\r\n        // 更新路径中的数据\r\n        const levelSplit = level.split('-');\r\n        if (levelSplit.length > 1) {\r\n          levelSplit.reduce((acc: any, levelItem: any): any => {\r\n            childs[acc] += childItems.length;\r\n            return `${acc}-${levelItem}`;\r\n          }, levelSplit[0]);\r\n        } else {\r\n          childs[level] += childItems.length;\r\n        }\r\n\r\n        loopPushChild(objItem[attr], `${level}-${String(objItemIndex)}`);\r\n      }\r\n    });\r\n  };\r\n\r\n  loopPushChild(params);\r\n\r\n  return childs;\r\n};\r\n\r\n\r\nexport const getCol = (\r\n  item: any,\r\n  itemIndex: string,\r\n  maxLevel: number,\r\n  childLength: ChildEntity,\r\n) => {\r\n  const levels: number = itemIndex.split('-').length;\r\n  const rowSpan: number = maxLevel - levels + 1;\r\n\r\n  if (hasOwn(item, 'children')) {\r\n    item.children.forEach((childItem: any, childIndex: number) => {\r\n      getCol(childItem, `${itemIndex}-${String(childIndex)}`, maxLevel, childLength);\r\n    });\r\n    // 追加 rowSpan\r\n    Object.assign(item, {\r\n      colSpan: childLength[itemIndex],\r\n    });\r\n  } else {\r\n    // 追加 rowSpan\r\n    Object.assign(item, {\r\n      rowSpan,\r\n    });\r\n  }\r\n};\r\n\r\nexport const handleCol = (colDatas: any[], newCol: any[], level: number = 0) => {\r\n  const colLine: any[] = newCol[level] || [];\r\n  const nextLevel: number = level + 1;\r\n  // 有层级\r\n  if (newCol[level]) {\r\n    newCol.splice(level, 1, colLine);\r\n  } else {\r\n    newCol.push(colLine);\r\n  }\r\n  colDatas.forEach((newColItem: any) => {\r\n    const { children, ...item } = newColItem;\r\n    if (children) {\r\n      handleCol(children, newCol, nextLevel);\r\n    }\r\n    colLine.push(item);\r\n  });\r\n};\r\n"],"sourceRoot":""}]}