{"remainingRequest":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/babel-loader/lib/index.js!/Users/zhangyufan/em/testPro/vue-scale/node_modules/ts-loader/index.js??ref--14-2!/Users/zhangyufan/em/testPro/vue-scale/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/zhangyufan/em/testPro/vue-scale/src/components/cascader/helper.ts","dependencies":[{"path":"/Users/zhangyufan/em/testPro/vue-scale/src/components/cascader/helper.ts","mtime":1573474128000},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/cache-loader/dist/cjs.js","mtime":1573721989004},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/babel-loader/lib/index.js","mtime":1574242632071},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/ts-loader/index.js","mtime":1574332289889},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1574242646426}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport _defineProperty from \"/Users/zhangyufan/em/testPro/vue-scale/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.find\";\nimport { hasOwn } from '@/helper/o'; // 递归获取结果 通过 label\n\nexport var getValueByLabel = function getValueByLabel(values, options, fieldNames) {\n  var newValue = [];\n  var index = 0;\n\n  var loopFind = function loopFind(opts) {\n    return opts.find(function (opt) {\n      return opt[fieldNames.label] === values[index];\n    });\n  };\n\n  var loop = function loop(opts) {\n    var Item = loopFind(opts);\n\n    if (Item) {\n      newValue.push(Item[fieldNames.value]);\n    }\n\n    if (Item && hasOwn(Item, fieldNames.children)) {\n      index++;\n      loop(Item[fieldNames.children]);\n    }\n  };\n\n  loop(options);\n  return newValue;\n}; // 将多维数组，转成路径数组\n// cascader 联级 中使用\n\nexport var objToPath = function objToPath(arr, fieldNames) {\n  var format = ' / ';\n  var path = []; // 带着路径和索引知道没有子级再添加\n\n  var reduceFn = function reduceFn(target) {\n    var valuePrefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var labelPrefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n    var disabled = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    target.forEach(function (cur, index) {\n      var itemValuePath = valuePrefix ? \"\".concat(valuePrefix).concat(format).concat(cur[fieldNames.value]) : cur[fieldNames.value];\n      var itemLabelPath = labelPrefix ? \"\".concat(labelPrefix).concat(format).concat(cur[fieldNames.label]) : cur[fieldNames.label];\n      var itemDisabled = disabled || cur[fieldNames.disabled] || false;\n\n      if (hasOwn(cur, fieldNames.children)) {\n        reduceFn(cur[fieldNames.children], itemValuePath, itemLabelPath, itemDisabled);\n      } else {\n        var _path$push;\n\n        var value = itemValuePath.split(format);\n        path.push((_path$push = {\n          path: itemValuePath,\n          disabled: itemDisabled,\n          item: cur\n        }, _defineProperty(_path$push, fieldNames.value, value), _defineProperty(_path$push, fieldNames.label, String(itemLabelPath).split(format)), _defineProperty(_path$push, fieldNames.children, []), _defineProperty(_path$push, \"floor\", value.length - 1), _defineProperty(_path$push, \"index\", index), _path$push));\n      }\n    });\n  };\n\n  reduceFn(arr);\n  return path;\n}; // 通过 children 获取下一级选项\n\nexport var getChildOptions = function getChildOptions(_ref) {\n  var item = _ref.item,\n      origin = _ref.origin,\n      index = _ref.index;\n  var opts = {\n    index: -1,\n    options: []\n  };\n  var nextIndex = index + 1;\n  item.forEach(function (childItem) {\n    opts.options.push(childItem);\n  });\n\n  if (origin[nextIndex]) {\n    origin.splice(nextIndex, 1, opts); // 如果点击第二列，子级展开之后点击第一列，清空三列及之后自列\n\n    if (origin.length > nextIndex) {\n      origin.length = nextIndex + 1;\n    }\n  } else {\n    origin.push(opts);\n  }\n}; // 轮询递归找出多级下拉选项\n\nexport var getCascaderOptions = function getCascaderOptions(_ref2) {\n  var options = _ref2.options,\n      origin = _ref2.origin,\n      value = _ref2.value,\n      fieldNames = _ref2.fieldNames;\n  var index = 0;\n  var label = fieldNames.label,\n      children = fieldNames.children;\n\n  var loopFind = function loopFind(opts) {\n    return opts.find(function (opt) {\n      return opt[label] === value[index];\n    });\n  };\n\n  var loopFindIndex = function loopFindIndex(opts) {\n    return opts.findIndex(function (opt) {\n      return opt[label] === value[index];\n    });\n  };\n\n  var loop = function loop(opts) {\n    var Item = loopFind(opts);\n\n    if (Item) {\n      origin.push({\n        index: loopFindIndex(opts),\n        options: opts\n      });\n\n      if (hasOwn(Item, children)) {\n        index++;\n        loop(Item[children]);\n      }\n    } else {\n      // 如果初始化没有值，或者没匹配到\n      origin.push({\n        index: -1,\n        options: opts\n      });\n    }\n  };\n\n  loop(options);\n};",{"version":3,"sources":["/Users/zhangyufan/em/testPro/vue-scale/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/zhangyufan/em/testPro/vue-scale/src/components/cascader/helper.ts"],"names":[],"mappings":"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","sourcesContent":["import { hasOwn } from '@/helper/o';\r\nimport {\r\n  FieldNamesEntity,\r\n} from './entity';\r\n\r\n// 递归获取结果 通过 label\r\nexport const getValueByLabel = (values: any[], options: any[], fieldNames: FieldNamesEntity) => {\r\n  const newValue: string[] = [];\r\n  let index: number = 0;\r\n  const loopFind = (opts: any[]) => opts.find(\r\n    (opt: any) => opt[fieldNames.label] === values[index],\r\n  );\r\n  const loop = (opts: any[]) => {\r\n    const Item = loopFind(opts);\r\n    if (Item) {\r\n      newValue.push(Item[fieldNames.value]);\r\n    }\r\n    if (Item && hasOwn(Item, fieldNames.children)) {\r\n      index++;\r\n      loop(Item[fieldNames.children]);\r\n    }\r\n  };\r\n\r\n  loop(options);\r\n  return newValue;\r\n};\r\n\r\n// 将多维数组，转成路径数组\r\n// cascader 联级 中使用\r\nexport const objToPath = (arr: any, fieldNames: FieldNamesEntity) => {\r\n  const format = ' / ';\r\n  const path: any[] = [];\r\n  // 带着路径和索引知道没有子级再添加\r\n  const reduceFn = (target: any[], valuePrefix = '', labelPrefix = '', disabled = false) => {\r\n    target.forEach((cur, index) => {\r\n      const itemValuePath = valuePrefix ? `${valuePrefix}${format}${cur[fieldNames.value]}` : cur[fieldNames.value];\r\n      const itemLabelPath = labelPrefix ? `${labelPrefix}${format}${cur[fieldNames.label]}` : cur[fieldNames.label];\r\n      const itemDisabled = disabled || cur[fieldNames.disabled] || false;\r\n\r\n      if (hasOwn(cur, fieldNames.children)) {\r\n        reduceFn(cur[fieldNames.children], itemValuePath, itemLabelPath, itemDisabled);\r\n      } else {\r\n        const value = itemValuePath.split(format);\r\n        path.push({\r\n          path: itemValuePath,\r\n          disabled: itemDisabled,\r\n          item: cur,\r\n          [fieldNames.value]: value,\r\n          [fieldNames.label]: String(itemLabelPath).split(format),\r\n          [fieldNames.children]: [],\r\n          floor: value.length - 1,\r\n          index,\r\n        });\r\n      }\r\n    });\r\n  };\r\n  reduceFn(arr);\r\n  return path;\r\n};\r\n\r\n// 通过 children 获取下一级选项\r\nexport const getChildOptions = ({\r\n  item,\r\n  origin,\r\n  index,\r\n}: any) => {\r\n  const opts: any = {\r\n    index: -1,\r\n    options: [],\r\n  };\r\n  const nextIndex = index + 1;\r\n\r\n  item.forEach((childItem: any) => {\r\n    opts.options.push(childItem);\r\n  });\r\n\r\n  if (origin[nextIndex]) {\r\n    origin.splice(nextIndex, 1, opts);\r\n    // 如果点击第二列，子级展开之后点击第一列，清空三列及之后自列\r\n    if (origin.length > nextIndex) {\r\n      origin.length = nextIndex + 1;\r\n    }\r\n  } else {\r\n    origin.push(opts);\r\n  }\r\n};\r\n\r\n// 轮询递归找出多级下拉选项\r\nexport const getCascaderOptions = ({\r\n  options,\r\n  origin,\r\n  value,\r\n  fieldNames,\r\n}: any) => {\r\n  let index = 0;\r\n  const { label, children } = fieldNames;\r\n  const loopFind = (opts: any[]) => opts.find(\r\n    (opt: any) => opt[label] === value[index],\r\n  );\r\n  const loopFindIndex = (opts: any[]) => opts.findIndex(\r\n    (opt: any) => opt[label] === value[index],\r\n  );\r\n  const loop = (opts: any[]) => {\r\n    const Item = loopFind(opts);\r\n    if (Item) {\r\n      origin.push({\r\n        index: loopFindIndex(opts),\r\n        options: opts,\r\n      });\r\n      if (hasOwn(Item, children)) {\r\n        index++;\r\n        loop(Item[children]);\r\n      }\r\n    } else {\r\n      // 如果初始化没有值，或者没匹配到\r\n      origin.push({\r\n        index: -1,\r\n        options: opts,\r\n      });\r\n    }\r\n  };\r\n  loop(options);\r\n};\r\n"],"sourceRoot":""}]}