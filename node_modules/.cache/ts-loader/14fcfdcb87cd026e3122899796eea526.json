{"remainingRequest":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/babel-loader/lib/index.js!/Users/zhangyufan/em/testPro/vue-scale/node_modules/ts-loader/index.js??ref--14-2!/Users/zhangyufan/em/testPro/vue-scale/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/zhangyufan/em/testPro/vue-scale/src/helper/type.ts","dependencies":[{"path":"/Users/zhangyufan/em/testPro/vue-scale/src/helper/type.ts","mtime":1573474128000},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/cache-loader/dist/cjs.js","mtime":1573721989004},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/babel-loader/lib/index.js","mtime":1574242632071},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/ts-loader/index.js","mtime":1574332289889},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1574242646426}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nexport var type = function type(thing) {\n  return Object.prototype.toString.call(thing);\n};\nexport var isNumber = function isNumber(thing) {\n  return type(thing) === '[object Number]';\n};\nexport var isString = function isString(thing) {\n  return type(thing) === '[object String]';\n};\nexport var isBoolean = function isBoolean(thing) {\n  return type(thing) === '[object Boolean]';\n};\nexport var isUndefined = function isUndefined(thing) {\n  return type(thing) === '[object Undefined]';\n};\nexport var isArray = function isArray(thing) {\n  return type(thing) === '[object Array]';\n};\nexport var isObject = function isObject(thing) {\n  return type(thing) === '[object Object]';\n};\nexport var isFunction = function isFunction(thing) {\n  return type(thing) === '[object Function]';\n};\nexport var isPromise = function isPromise(thing) {\n  return type(thing) === '[object Promise]';\n}; // 是否是韩语\n\nexport var isKorean = function isKorean(text) {\n  var reg = /([(\\uAC00-\\uD7AF)|(\\u3130-\\u318F)])+/gi;\n  return reg.test(text);\n};",{"version":3,"sources":["/Users/zhangyufan/em/testPro/vue-scale/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/zhangyufan/em/testPro/vue-scale/src/helper/type.ts"],"names":[],"mappings":";AAAA,OAAO,IAAM,IAAI,GAAG,SAAP,IAAO,CAAC,KAAD;AAAA,SAAwB,MAAM,CAAC,SAAP,CAAiB,QAAjB,CAA0B,IAA1B,CAA+B,KAA/B,CAAxB;AAAA,CAAb;AAEP,OAAO,IAAM,QAAQ,GAAG,SAAX,QAAW,CAAC,KAAD;AAAA,SAAyB,IAAI,CAAC,KAAD,CAAJ,KAAgB,iBAAzC;AAAA,CAAjB;AAEP,OAAO,IAAM,QAAQ,GAAG,SAAX,QAAW,CAAC,KAAD;AAAA,SAAyB,IAAI,CAAC,KAAD,CAAJ,KAAgB,iBAAzC;AAAA,CAAjB;AAEP,OAAO,IAAM,SAAS,GAAG,SAAZ,SAAY,CAAC,KAAD;AAAA,SAAyB,IAAI,CAAC,KAAD,CAAJ,KAAgB,kBAAzC;AAAA,CAAlB;AAEP,OAAO,IAAM,WAAW,GAAG,SAAd,WAAc,CAAC,KAAD;AAAA,SAAyB,IAAI,CAAC,KAAD,CAAJ,KAAgB,oBAAzC;AAAA,CAApB;AAEP,OAAO,IAAM,OAAO,GAAG,SAAV,OAAU,CAAC,KAAD;AAAA,SAAyB,IAAI,CAAC,KAAD,CAAJ,KAAgB,gBAAzC;AAAA,CAAhB;AAEP,OAAO,IAAM,QAAQ,GAAG,SAAX,QAAW,CAAC,KAAD;AAAA,SAAyB,IAAI,CAAC,KAAD,CAAJ,KAAgB,iBAAzC;AAAA,CAAjB;AAEP,OAAO,IAAM,UAAU,GAAG,SAAb,UAAa,CAAC,KAAD;AAAA,SAAyB,IAAI,CAAC,KAAD,CAAJ,KAAgB,mBAAzC;AAAA,CAAnB;AAEP,OAAO,IAAM,SAAS,GAAG,SAAZ,SAAY,CAAC,KAAD;AAAA,SAAyB,IAAI,CAAC,KAAD,CAAJ,KAAgB,kBAAzC;AAAA,CAAlB,C,CAEP;;AACA,OAAO,IAAM,QAAQ,GAAG,SAAX,QAAW,CAAC,IAAD,EAA0B;AAChD,MAAM,GAAG,GAAG,wCAAZ;AACA,SAAO,GAAG,CAAC,IAAJ,CAAS,IAAT,CAAP;AACD,CAHM","sourcesContent":["export const type = (thing: any): string => Object.prototype.toString.call(thing);\r\n\r\nexport const isNumber = (thing: any): boolean => type(thing) === '[object Number]';\r\n\r\nexport const isString = (thing: any): boolean => type(thing) === '[object String]';\r\n\r\nexport const isBoolean = (thing: any): boolean => type(thing) === '[object Boolean]';\r\n\r\nexport const isUndefined = (thing: any): boolean => type(thing) === '[object Undefined]';\r\n\r\nexport const isArray = (thing: any): boolean => type(thing) === '[object Array]';\r\n\r\nexport const isObject = (thing: any): boolean => type(thing) === '[object Object]';\r\n\r\nexport const isFunction = (thing: any): boolean => type(thing) === '[object Function]';\r\n\r\nexport const isPromise = (thing: any): boolean => type(thing) === '[object Promise]';\r\n\r\n// 是否是韩语\r\nexport const isKorean = (text: string): boolean => {\r\n  const reg = /([(\\uAC00-\\uD7AF)|(\\u3130-\\u318F)])+/gi;\r\n  return reg.test(text);\r\n};\r\n"],"sourceRoot":""}]}