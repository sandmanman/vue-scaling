{"remainingRequest":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhangyufan/em/testPro/vue-scale/src/components/checkbox/Checkbox.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/zhangyufan/em/testPro/vue-scale/src/components/checkbox/Checkbox.vue","mtime":1573474128000},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/css-loader/index.js","mtime":1573721989187},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1574242648574},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/postcss-loader/src/index.js","mtime":1573721998387},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/sass-loader/lib/loader.js","mtime":1574242652692},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/cache-loader/dist/cjs.js","mtime":1573721989004},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/vue-loader/lib/index.js","mtime":1574242648574}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"checkbox.scss\";\n",{"version":3,"sources":["Checkbox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkLA","file":"Checkbox.vue","sourceRoot":"src/components/checkbox","sourcesContent":["<template>\r\n  <div\r\n    class=\"w-checkbox\"\r\n    @click=\"clickFn($event)\"\r\n    @mouseover=\"hoverStatus = true\"\r\n    @mouseout=\"hoverStatus = false\"\r\n    :class=\"[\r\n      {\r\n        [`${preName}disabled`]: disabled,\r\n      },\r\n      className,\r\n    ]\"\r\n  >\r\n    <div\r\n      :class=\"[`${preName}status`, {\r\n        [`${preName}on`]: status,\r\n        [`${preName}indeterminate`]: indeterminate,\r\n        [`${preName}status-disabled`]: disabled,\r\n      }]\"\r\n      :style=\"colorStyle\"\r\n    >\r\n      <input type=\"checkbox\" aria-label=\"checkbox\" :class=\"[`${preName}input`]\">\r\n    </div>\r\n    <div\r\n    :class=\"[\r\n      `${preName}content`,\r\n      {\r\n        [`${preName}content-disabled`]: disabled,\r\n      },\r\n    ]\"\r\n    :style=\"textColorStyle\"\r\n    v-if=\"$slots.default\"\r\n    >\r\n      <slot></slot>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport {\r\n  Component,\r\n  Model,\r\n  Prop,\r\n  Emit,\r\n  Watch,\r\n  Vue,\r\n} from 'vue-property-decorator';\r\nimport {\r\n  isBoolean,\r\n  isNumber,\r\n  isString,\r\n  isUndefined,\r\n} from '../../helper/type';\r\n\r\ninterface ReturnParamsEntity {\r\n  ev: Event;\r\n  value: string | number | boolean;\r\n  label: string | number | boolean;\r\n  status: string | number | boolean;\r\n  disabled: boolean;\r\n  indeterminate: boolean;\r\n}\r\n\r\ninterface ColorStyleEntity {\r\n  [style: string]: string;\r\n}\r\n\r\n@Component\r\nexport default class Checkbox extends Vue {\r\n  name: string = 'Checkbox';\r\n\r\n  preName: string = 'w-checkbox-';\r\n\r\n  status: string | number | boolean = false;\r\n\r\n  hoverStatus: boolean = false;\r\n\r\n  @Model('model', { type: [Boolean, Number, String], default: undefined }) readonly value!: boolean | number | string;\r\n\r\n  @Prop({\r\n    type: [Boolean, Number, String],\r\n    default: undefined,\r\n  }) private label!: string | number | boolean;\r\n\r\n  @Prop(Boolean) private disabled!: boolean;\r\n\r\n  @Prop(Boolean) private indeterminate!: boolean;\r\n\r\n  @Prop(String) private textColor!: string;\r\n\r\n  @Prop(String) private hoverColor!: string;\r\n\r\n  @Prop(String) private checkColor!: string;\r\n\r\n  @Prop([String, Object, Array]) private className!: string | object | any[];\r\n\r\n  @Prop({\r\n    type: Function,\r\n    default: () => {},\r\n  }) private change?: Function;\r\n\r\n  mounted() {\r\n    this.checkStatus();\r\n  }\r\n\r\n  @Watch('value')\r\n  checkStatus() {\r\n    if (\r\n      (isBoolean(this.value) && isBoolean(this.label))\r\n      || (isNumber(this.value) && isNumber(this.label))\r\n      || (isString(this.value) && isString(this.label))\r\n    ) {\r\n      this.status = this.value === this.label;\r\n    }\r\n\r\n    if (isBoolean(this.value) && isUndefined(this.label)) {\r\n      this.status = this.value;\r\n    }\r\n  }\r\n\r\n  get textColorStyle(): ColorStyleEntity {\r\n    const colors: ColorStyleEntity = {};\r\n\r\n    if (this.textColor) {\r\n      colors.color = this.textColor;\r\n    }\r\n\r\n    return colors;\r\n  }\r\n\r\n  get colorStyle(): ColorStyleEntity {\r\n    const colors: ColorStyleEntity = {};\r\n\r\n    if (this.hoverStatus && this.hoverColor) {\r\n      colors.borderColor = this.hoverColor;\r\n    }\r\n\r\n    if (this.status && this.checkColor) {\r\n      colors.backgroundColor = this.checkColor;\r\n      colors.borderColor = this.checkColor;\r\n    }\r\n\r\n    return colors;\r\n  }\r\n\r\n  @Emit('change')\r\n  clickFn(ev: MouseEvent): ReturnParamsEntity {\r\n    this.changeStatus();\r\n\r\n    const reParams: ReturnParamsEntity = {\r\n      ev,\r\n      status: this.status,\r\n      label: this.label,\r\n      value: this.value,\r\n      disabled: this.disabled,\r\n      indeterminate: this.indeterminate,\r\n    };\r\n\r\n    (this.change as Function)(reParams);\r\n\r\n    return reParams;\r\n  }\r\n\r\n  @Emit('model')\r\n  changeStatus(): string | number | boolean {\r\n    if (this.disabled) {\r\n      return this.status;\r\n    }\r\n    this.status = !this.status;\r\n    if (!isUndefined(this.label) && this.status) {\r\n      return this.label;\r\n    }\r\n    return this.status;\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n  @import \"checkbox.scss\";\r\n</style>\r\n"]}]}