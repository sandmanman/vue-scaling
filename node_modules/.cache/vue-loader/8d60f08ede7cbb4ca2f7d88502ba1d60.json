{"remainingRequest":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhangyufan/em/testPro/vue-scale/src/components/tag/Tag.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/zhangyufan/em/testPro/vue-scale/src/components/tag/Tag.vue","mtime":1573474128000},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/css-loader/index.js","mtime":1573721989187},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1574242648574},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/postcss-loader/src/index.js","mtime":1573721998387},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/sass-loader/lib/loader.js","mtime":1574242652692},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/cache-loader/dist/cjs.js","mtime":1573721989004},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/vue-loader/lib/index.js","mtime":1574242648574}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import './tag.scss';\n",{"version":3,"sources":["Tag.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2LA","file":"Tag.vue","sourceRoot":"src/components/tag","sourcesContent":["<template>\r\n  <div\r\n    class=\"w-tag\"\r\n    :class=\"classList\"\r\n    @animationend=\"removeClickName\"\r\n    @click=\"clickFn($event)\"\r\n    :style=\"tagStyle\"\r\n  >\r\n    <slot></slot>\r\n    <i\r\n    class=\"w-tag-close\"\r\n    :class=\"{\r\n      'w-tag-close-section': !isAllValue,\r\n      'w-tag-close-disabled': disabled,\r\n    }\"\r\n    v-if=\"closableValue\"\r\n    @click=\"closeTag($event)\"></i>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport {\r\n  Component,\r\n  Model,\r\n  Prop,\r\n  Emit,\r\n  Vue,\r\n} from 'vue-property-decorator';\r\nimport { hexToRgb, RgbEntity } from '@/helper/color';\r\n\r\ninterface ReturnEntity {\r\n  ev: MouseEvent;\r\n}\r\n\r\ninterface ColorsEntity {\r\n  color?: string;\r\n  backgroundColor?: string;\r\n  borderColor?: string;\r\n}\r\n\r\n@Component\r\nexport default class Tag extends Vue {\r\n  clicked: boolean = false;\r\n\r\n  @Model('model', { type: String }) readonly value!: string;\r\n\r\n  @Prop(Boolean) private disabled!: boolean;\r\n\r\n  @Prop(Boolean) private loading!: boolean;\r\n\r\n  @Prop(Boolean) private stop!: boolean;\r\n\r\n  @Prop({\r\n    type: Boolean,\r\n    default: true,\r\n  }) private inline!: boolean;\r\n\r\n  @Prop(Boolean) private closable!: boolean;\r\n\r\n  @Prop(String) private size!: string;\r\n\r\n  @Prop(String) private color!: string;\r\n\r\n  @Prop({\r\n    type: String,\r\n    default: 'all', // section 部分 || all 全部\r\n  }) private colorType!: string;\r\n\r\n  @Prop({\r\n    type: Function,\r\n    default: () => {},\r\n  }) private close!: Function;\r\n\r\n  get classList() {\r\n    return [\r\n      {\r\n        'w-tag-loading': this.loading,\r\n        'w-tag-lg': this.size === 'large',\r\n        'w-tag-sm': this.size === 'small',\r\n        'w-tag-loading-lg': this.loadLarge,\r\n        'w-tag-loading-sm': this.loadSmall,\r\n        'w-tag-click': !this.loading && this.clicked,\r\n        'w-tag-inline': this.inline,\r\n        'w-tag-disabled': this.disabled,\r\n        'w-tag-section': !this.isAllValue,\r\n        'w-tag-section-loading': this.sectionLoad,\r\n      },\r\n    ];\r\n  }\r\n\r\n  get sectionLoad() {\r\n    return !this.isAllValue && this.loading;\r\n  }\r\n\r\n  get loadLarge() {\r\n    return this.loading && this.size === 'large';\r\n  }\r\n\r\n  get loadSmall() {\r\n    return this.loading && this.size === 'small';\r\n  }\r\n\r\n  get closableValue() {\r\n    return this.closable && !this.loading;\r\n  }\r\n\r\n  get sizeValue() {\r\n    return this.size;\r\n  }\r\n\r\n  get disabledValue() {\r\n    return this.disabled;\r\n  }\r\n\r\n  get colorTypeValue() {\r\n    return this.colorType;\r\n  }\r\n\r\n  get isAllValue() {\r\n    return this.colorType === 'all';\r\n  }\r\n\r\n  get borderColorValue() {\r\n    const { r, g, b } = this.colorValue;\r\n    const alpha = this.isAllValue ? 0.4 : 1;\r\n    return `rgba(${r}, ${g}, ${b}, ${alpha})`;\r\n  }\r\n\r\n  get backgroundColorValue() {\r\n    const { r, g, b }: RgbEntity = this.colorValue;\r\n    const alpha = this.isAllValue ? 0.1 : 1;\r\n    return `rgba(${r}, ${g}, ${b}, ${alpha})`;\r\n  }\r\n\r\n  get fontColorValue() {\r\n    const { r, g, b }: RgbEntity = this.colorValue;\r\n    return this.isAllValue ? `rgb(${r}, ${g}, ${b})` : '#fff';\r\n  }\r\n\r\n  get isSetColor(): boolean {\r\n    return !!this.color;\r\n  }\r\n\r\n  get colorValue(): RgbEntity {\r\n    return hexToRgb(this.color);\r\n  }\r\n\r\n  get tagStyle(): ColorsEntity {\r\n    const colors: ColorsEntity = {};\r\n\r\n    if (this.isSetColor) {\r\n      colors.borderColor = this.borderColorValue;\r\n      colors.color = this.fontColorValue;\r\n      colors.backgroundColor = this.backgroundColorValue;\r\n    }\r\n    return colors;\r\n  }\r\n\r\n  clickFn(ev: MouseEvent) {\r\n    this.clicked = !this.disabled;\r\n    if (this.stop) {\r\n      ev.stopPropagation();\r\n    }\r\n  }\r\n\r\n  removeClickName() {\r\n    this.clicked = false;\r\n  }\r\n\r\n  @Emit('close')\r\n  closeTag(ev: MouseEvent) {\r\n    const params: ReturnEntity = {\r\n      ev,\r\n    };\r\n\r\n    this.close(params);\r\n\r\n    if (this.stop) {\r\n      ev.stopPropagation();\r\n    }\r\n\r\n    return params;\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n  @import './tag.scss';\r\n</style>\r\n"]}]}