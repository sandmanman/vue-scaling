{"remainingRequest":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhangyufan/em/testPro/vue-scale/src/components/datepicker/DatePickerTable.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/zhangyufan/em/testPro/vue-scale/src/components/datepicker/DatePickerTable.vue","mtime":1573474128000},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/cache-loader/dist/cjs.js","mtime":1573721989004},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/babel-loader/lib/index.js","mtime":1574242632071},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/ts-loader/index.js","mtime":1574332289889},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/cache-loader/dist/cjs.js","mtime":1573721989004},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/vue-loader/lib/index.js","mtime":1574242648574}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport {\r\n  Component,\r\n  Model,\r\n  Prop,\r\n  Emit,\r\n  Watch,\r\n  Vue,\r\n} from 'vue-property-decorator';\r\nimport chunk from 'lodash/chunk';\r\nimport {\r\n  DateEntity,\r\n  AgesInAgesEntity,\r\n  MonthInMonthsEntity,\r\n  YearInYearsEntity,\r\n} from '@/helper/date';\r\nimport WRender from '@/helper/render';\r\nimport { isFunction } from '@/helper/type';\r\n\r\nexport interface PickerTableChangeEntity {\r\n  value: string;\r\n  trueValue: string | number;\r\n  item: DateEntity\r\n  | MonthInMonthsEntity\r\n  | AgesInAgesEntity\r\n  | YearInYearsEntity;\r\n  type: string;\r\n  dateWeek: DateEntity[]\r\n    | MonthInMonthsEntity[]\r\n    | AgesInAgesEntity[]\r\n    | YearInYearsEntity[];\r\n  ev: Event;\r\n}\r\n\r\n@Component({\r\n  components: {\r\n    WRender,\r\n  },\r\n})\r\nexport default class DatePickerTable extends Vue {\r\n  cyclicData: any[][] = [[]];\r\n\r\n  isFunction: Function = isFunction;\r\n\r\n  @Model('model', { type: [String, Number], default: undefined }) readonly value!: string | number;\r\n\r\n  @Prop(Array) private options!: [];\r\n\r\n  @Prop(Array) private col!: string[];\r\n\r\n  @Prop(Number) private chunkNumber!: number;\r\n\r\n  @Prop(String) private type!: string;\r\n\r\n  @Prop(String) private textValue!: string;\r\n\r\n  @Prop(String) private nowValue!: string;\r\n\r\n  // 没用 render 是 因为 test 的时候与自带 函数 重名\r\n  @Prop(Function) private pickerRender!: Function;\r\n\r\n  get isWeek(): boolean {\r\n    return this.type === 'week';\r\n  }\r\n\r\n  isWeekActive(weekLine: DateEntity[]): boolean {\r\n    if (this.isWeek) {\r\n      return !!weekLine.find(\r\n        (lineItem: DateEntity) => Boolean(\r\n          lineItem.day && lineItem.day > 0 && lineItem.value === this.value,\r\n        ),\r\n      );\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  @Watch('options', {\r\n    immediate: true,\r\n  })\r\n  init() {\r\n    this.cyclicData = chunk(this.options, this.chunkNumber);\r\n  }\r\n\r\n  @Emit('pickerTableChange')\r\n  itemClick(\r\n    item: DateEntity\r\n      | MonthInMonthsEntity\r\n      | AgesInAgesEntity\r\n      | YearInYearsEntity,\r\n    dateWeek: DateEntity[]\r\n      | MonthInMonthsEntity[]\r\n      | AgesInAgesEntity[]\r\n      | YearInYearsEntity[],\r\n    ev: Event,\r\n  ): PickerTableChangeEntity {\r\n    const params: PickerTableChangeEntity = {\r\n      value: item.value || '',\r\n      trueValue: item.trueValue || 0,\r\n      item,\r\n      type: this.type,\r\n      dateWeek,\r\n      ev,\r\n    };\r\n\r\n    return params;\r\n  }\r\n}\r\n",{"version":3,"sources":["DatePickerTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"DatePickerTable.vue","sourceRoot":"src/components/datepicker","sourcesContent":["<template>\r\n  <!-- 使用 -->\r\n  <!-- <DatePcikerTable\r\n    type=\"date\"\r\n    textValue=\"trueValue\"\r\n    :col=\"WEEK_TEXT\"\r\n    :options=\"dates\"\r\n    :chunkNumber=\"WEEK_TEXT.length\"\r\n    @pickerTableChange=\"pickerTableChange\"\r\n  /> -->\r\n  <!-- <DatePcikerTable\r\n    type=\"month\"\r\n    :options=\"MONTH_TEXT\"\r\n    :chunkNumber=\"3\"\r\n  /> -->\r\n  <!-- <DatePcikerTable\r\n    type=\"year\"\r\n    textValue=\"value\"\r\n    :options=\"particularYears.years\"\r\n    :chunkNumber=\"3\"\r\n  /> -->\r\n  <!-- <DatePcikerTable\r\n    type=\"age\"\r\n    textValue=\"value\"\r\n    :options=\"ages.ages\"\r\n    :chunkNumber=\"3\"\r\n  /> -->\r\n  <!-- --{{ages.range}}-- -->\r\n  <!-- --{{particularYears.range}}-- -->\r\n  <!-- --{{monthList}}-- -->\r\n  <table class=\"w-picker-table\">\r\n    <tr v-if=\"col\">\r\n      <th\r\n        class=\"w-picker-table-th\"\r\n        :class=\"{\r\n          ['w-picker-table-th-date']: type === 'date'\r\n        }\"\r\n        v-for=\"(weekTextItem, weekTextIndex) in col\"\r\n        :key=\"weekTextIndex\"\r\n      >{{ weekTextItem }}</th>\r\n    </tr>\r\n    <tr\r\n      v-for=\"(dateWeek, dateWeekIndex) in cyclicData\"\r\n      :key=\"dateWeekIndex\"\r\n      :class=\"{\r\n        'w-picker-table-tr-week': isWeek,\r\n        'w-picker-table-tr-week-active': isWeekActive(dateWeek),\r\n      }\"\r\n    >\r\n      <td\r\n        class=\"w-picker-table-td\"\r\n        :class=\"[`w-picker-table-td-${type}`, {\r\n          ['w-picker-table-td-current']: dateItem.status === 'current',\r\n        }]\"\r\n        v-for=\"(dateItem, dateIndex) in dateWeek\"\r\n        :key=\"`tr${dateWeekIndex}${dateIndex}`\"\r\n        @click=\"itemClick(dateItem, dateWeek, $event)\"\r\n      >\r\n        <WRender\r\n          v-if=\"isFunction(pickerRender)\"\r\n          :render=\"pickerRender\"\r\n          :data=\"{\r\n            dateItem,\r\n            dateIndex,\r\n            dateWeekIndex,\r\n            dateWeek,\r\n            type,\r\n          }\"\r\n        ></WRender>\r\n        <div\r\n          :class=\"[`w-picker-${type}`, {\r\n            ['w-picker-active']: !isWeek && dateItem.value === value,\r\n            ['w-picker-today']: dateItem.value === nowValue,\r\n            ['w-picker-disabled']: dateItem.disabled,\r\n          }]\"\r\n          :title=\"isWeek ? dateItem.isoWeekTitle : dateItem.title\"\r\n          v-else\r\n        >{{ dateItem[textValue] }}</div>\r\n      </td>\r\n    </tr>\r\n  </table>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport {\r\n  Component,\r\n  Model,\r\n  Prop,\r\n  Emit,\r\n  Watch,\r\n  Vue,\r\n} from 'vue-property-decorator';\r\nimport chunk from 'lodash/chunk';\r\nimport {\r\n  DateEntity,\r\n  AgesInAgesEntity,\r\n  MonthInMonthsEntity,\r\n  YearInYearsEntity,\r\n} from '@/helper/date';\r\nimport WRender from '@/helper/render';\r\nimport { isFunction } from '@/helper/type';\r\n\r\nexport interface PickerTableChangeEntity {\r\n  value: string;\r\n  trueValue: string | number;\r\n  item: DateEntity\r\n  | MonthInMonthsEntity\r\n  | AgesInAgesEntity\r\n  | YearInYearsEntity;\r\n  type: string;\r\n  dateWeek: DateEntity[]\r\n    | MonthInMonthsEntity[]\r\n    | AgesInAgesEntity[]\r\n    | YearInYearsEntity[];\r\n  ev: Event;\r\n}\r\n\r\n@Component({\r\n  components: {\r\n    WRender,\r\n  },\r\n})\r\nexport default class DatePickerTable extends Vue {\r\n  cyclicData: any[][] = [[]];\r\n\r\n  isFunction: Function = isFunction;\r\n\r\n  @Model('model', { type: [String, Number], default: undefined }) readonly value!: string | number;\r\n\r\n  @Prop(Array) private options!: [];\r\n\r\n  @Prop(Array) private col!: string[];\r\n\r\n  @Prop(Number) private chunkNumber!: number;\r\n\r\n  @Prop(String) private type!: string;\r\n\r\n  @Prop(String) private textValue!: string;\r\n\r\n  @Prop(String) private nowValue!: string;\r\n\r\n  // 没用 render 是 因为 test 的时候与自带 函数 重名\r\n  @Prop(Function) private pickerRender!: Function;\r\n\r\n  get isWeek(): boolean {\r\n    return this.type === 'week';\r\n  }\r\n\r\n  isWeekActive(weekLine: DateEntity[]): boolean {\r\n    if (this.isWeek) {\r\n      return !!weekLine.find(\r\n        (lineItem: DateEntity) => Boolean(\r\n          lineItem.day && lineItem.day > 0 && lineItem.value === this.value,\r\n        ),\r\n      );\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  @Watch('options', {\r\n    immediate: true,\r\n  })\r\n  init() {\r\n    this.cyclicData = chunk(this.options, this.chunkNumber);\r\n  }\r\n\r\n  @Emit('pickerTableChange')\r\n  itemClick(\r\n    item: DateEntity\r\n      | MonthInMonthsEntity\r\n      | AgesInAgesEntity\r\n      | YearInYearsEntity,\r\n    dateWeek: DateEntity[]\r\n      | MonthInMonthsEntity[]\r\n      | AgesInAgesEntity[]\r\n      | YearInYearsEntity[],\r\n    ev: Event,\r\n  ): PickerTableChangeEntity {\r\n    const params: PickerTableChangeEntity = {\r\n      value: item.value || '',\r\n      trueValue: item.trueValue || 0,\r\n      item,\r\n      type: this.type,\r\n      dateWeek,\r\n      ev,\r\n    };\r\n\r\n    return params;\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n  @import \"../../helper/picker.scss\";\r\n</style>\r\n"]}]}