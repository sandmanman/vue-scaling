{"remainingRequest":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhangyufan/em/testPro/vue-scale/src/components/progress/ProgressText.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/zhangyufan/em/testPro/vue-scale/src/components/progress/ProgressText.vue","mtime":1573474128000},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/cache-loader/dist/cjs.js","mtime":1573721989004},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/babel-loader/lib/index.js","mtime":1574242632071},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/ts-loader/index.js","mtime":1574332289889},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/cache-loader/dist/cjs.js","mtime":1573721989004},{"path":"/Users/zhangyufan/em/testPro/vue-scale/node_modules/vue-loader/lib/index.js","mtime":1574242648574}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport {\r\n  Component,\r\n  Model,\r\n  Prop,\r\n  Vue,\r\n} from 'vue-property-decorator';\r\nimport TransferDom from '@/directives/transfer-dom';\r\nimport WProgressLink from '@/components/progress/ProgressLine.vue';\r\nimport WProgressCircle from '@/components/progress/ProgressCircle.vue';\r\nimport {\r\n  iconList,\r\n  IconListEntity,\r\n  statusList,\r\n  ColorItemEntity,\r\n} from '@/components/progress/helper';\r\nimport WIcon from '@/components/icon/Icon.vue';\r\n\r\nVue.directive('transfer-dom', (TransferDom as any));\r\n\r\n@Component({\r\n  components: {\r\n    WProgressLink,\r\n    WProgressCircle,\r\n    WIcon,\r\n  },\r\n})\r\nexport default class WProgressText extends Vue {\r\n  name: string = 'ProgressText';\r\n\r\n  iconList: IconListEntity = iconList;\r\n\r\n  @Model('model', { type: Number }) readonly value!: number;\r\n\r\n  @Prop({\r\n    type: Number,\r\n    default: 8,\r\n  }) private strokeWidth!: number;\r\n\r\n  @Prop(String) private status!: string; // success, error, normal,\r\n\r\n  @Prop({\r\n    type: String,\r\n    default: 'line', // circle, dashbroad\r\n  }) private type!: string;\r\n\r\n  @Prop(Boolean) private inside!: boolean;\r\n\r\n  @Prop({\r\n    type: Function,\r\n    default: (percent: Number) => `${percent}%`,\r\n  }) private format!: Function;\r\n\r\n  get fontStyle() {\r\n    return {\r\n      height: `${this.strokeWidth}px`,\r\n      'line-height': `${this.strokeWidth}px`,\r\n    };\r\n  }\r\n\r\n  get hasStatus(): boolean {\r\n    return !!this.status && statusList.some((statusItem: string) => statusItem === this.status);\r\n  }\r\n\r\n  get percentText() {\r\n    return this.format(this.value);\r\n  }\r\n\r\n  get noLine(): boolean {\r\n    return this.type !== 'line';\r\n  }\r\n}\r\n",{"version":3,"sources":["ProgressText.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"ProgressText.vue","sourceRoot":"src/components/progress","sourcesContent":["<template>\r\n  <div\r\n    :class=\"[`w-progress-text${inside ? '-inner' : ''}`, {\r\n      'w-progress-text-circle': noLine,\r\n    }]\"\r\n  >\r\n    <span\r\n      :style=\"fontStyle\"\r\n      v-if=\"!hasStatus || inside\"\r\n    >{{ percentText }}</span>\r\n    <WIcon\r\n      class=\"w-progress-icon\"\r\n      :style=\"`color: ${iconList[status].color}`\"\r\n      v-else\r\n    >\r\n      <svg\r\n        viewBox=\"64 64 896 896\"\r\n        focusable=\"false\"\r\n        class=\"\"\r\n        data-icon=\"close-circle\"\r\n        width=\"1em\"\r\n        height=\"1em\"\r\n        fill=\"currentColor\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <path :d=\"iconList[status].icon\"></path>\r\n      </svg>\r\n    </WIcon>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport {\r\n  Component,\r\n  Model,\r\n  Prop,\r\n  Vue,\r\n} from 'vue-property-decorator';\r\nimport TransferDom from '@/directives/transfer-dom';\r\nimport WProgressLink from '@/components/progress/ProgressLine.vue';\r\nimport WProgressCircle from '@/components/progress/ProgressCircle.vue';\r\nimport {\r\n  iconList,\r\n  IconListEntity,\r\n  statusList,\r\n  ColorItemEntity,\r\n} from '@/components/progress/helper';\r\nimport WIcon from '@/components/icon/Icon.vue';\r\n\r\nVue.directive('transfer-dom', (TransferDom as any));\r\n\r\n@Component({\r\n  components: {\r\n    WProgressLink,\r\n    WProgressCircle,\r\n    WIcon,\r\n  },\r\n})\r\nexport default class WProgressText extends Vue {\r\n  name: string = 'ProgressText';\r\n\r\n  iconList: IconListEntity = iconList;\r\n\r\n  @Model('model', { type: Number }) readonly value!: number;\r\n\r\n  @Prop({\r\n    type: Number,\r\n    default: 8,\r\n  }) private strokeWidth!: number;\r\n\r\n  @Prop(String) private status!: string; // success, error, normal,\r\n\r\n  @Prop({\r\n    type: String,\r\n    default: 'line', // circle, dashbroad\r\n  }) private type!: string;\r\n\r\n  @Prop(Boolean) private inside!: boolean;\r\n\r\n  @Prop({\r\n    type: Function,\r\n    default: (percent: Number) => `${percent}%`,\r\n  }) private format!: Function;\r\n\r\n  get fontStyle() {\r\n    return {\r\n      height: `${this.strokeWidth}px`,\r\n      'line-height': `${this.strokeWidth}px`,\r\n    };\r\n  }\r\n\r\n  get hasStatus(): boolean {\r\n    return !!this.status && statusList.some((statusItem: string) => statusItem === this.status);\r\n  }\r\n\r\n  get percentText() {\r\n    return this.format(this.value);\r\n  }\r\n\r\n  get noLine(): boolean {\r\n    return this.type !== 'line';\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n  @import './progress.scss';\r\n</style>\r\n"]}]}